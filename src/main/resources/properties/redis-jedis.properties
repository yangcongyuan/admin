#最大分配的对象数 2.2.0版本以上maxActive ->(更名为)maxTotal
redis.pool.maxTotal=1024

#最大能够保持idel状态的对象数
redis.pool.maxIdle=200

#当池内没有返回对象时，最大等待时间 2.2.0版本以上maxActive ->(更名为)maxWaitMillis
redis.pool.maxWaitMillis=1000

#当调用borrow Object方法时，是否进行有效性检查
redis.pool.testOnBorrow=false

#当调用return Object方法时，是否进行有效性检查
redis.pool.testOnReturn=true


#maxActive: 链接池中最大连接数,默认为8.
#maxIdle: 链接池中最大空闲的连接数,默认为8.
#minIdle: 连接池中最少空闲的连接数,默认为0.
#maxWait: 当连接池资源耗尽时，调用者最大阻塞的时间，超时将跑出异常。单位，毫秒数;默认为-1.表示永不超时.
#minEvictableIdleTimeMillis: 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除。
#softMinEvictableIdleTimeMillis: 连接空闲的最小时间，达到此值后空闲链接将会被移除，且保留“minIdle”个空闲连接数。默认为-1.
#numTestsPerEvictionRun: 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3.
#testOnBorrow: 向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值.
#testOnReturn:  向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值.
#testWhileIdle:  向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值.
#timeBetweenEvictionRunsMillis:  “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1.
#whenExhaustedAction: 当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1：
#-> 0 : 抛出异常，
#-> 1 : 阻塞，直到有可用链接资源
#-> 2 : 强制创建新的链接资源

#IP
redis.ip=123.56.205.77

#Port
redis.port=6379

#密码
redis.password=mgredis

#客户端超时时间单位是毫秒
redis.timeout=10000